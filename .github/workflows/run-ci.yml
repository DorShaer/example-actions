name: Bright Security Scan

on:
  push:
    branches:
      - crawler
      - har-file
      - swagger
      - brokencrystals
  pull_request:
    branches: [main]

jobs:
  upload_HAR:
    name: Upload HAR file
    runs-on: ubuntu-latest
    steps:
      - name: Upload HAR Files to BrightSecurity Dashboard
        run: |
          mkdir hars
          wget -q https://gist.githubusercontent.com/DorShaer/037475d0febe67396d374a56d053e13e/raw/227b68d164051c024713fa5af7fa7cec7808af7d/brokencrystals.har -O hars/broken.har
          for file in hars/*; do
            if [ -f "$file" ]; then
              response=$(curl -X 'POST' \
                'https://app.brightsec.com/api/v1/projects/${{ secrets.BRIGHTSECURITY_PROJECT_ID }}/files' \
                -H 'accept: application/json' \
                -H 'Authorization: api-key ${{ secrets.BRIGHT_TOKEN }}' \
                -H 'Content-Type: multipart/form-data' \
                -F "file=@${file}" \
                -s)  
              echo $response  
              file_id=$(echo ${response} | grep -oP '(?<="id":")[^"]*')
              echo $file_id
              echo "Uploaded file id: ${file_id}"
            fi
          done
          echo "::set-output name=file_id::$file_id"  
        id: upload-har
        
      - name: Scan Start
        run: |
          scan_response=$(curl -X POST 'https://app.brightsec.com/api/v1/scans' \
          -H 'accept: application/json, text/plain, */*' \
          -H 'authorization: api-key ${{ secrets.BRIGHT_TOKEN }}' \
          -H 'content-type: application/json' \
          --data-raw '{"name":"Bright Scan - ${{ github.sha }}","poolSize":10,"smart":true,"optimizedCrawler":true,"maxInteractionsChainLength":3,
          "skipStaticParams":true,"slowEpTimeout":null,"targetTimeout":null,"exclusions":{},
          "projectId":"'"${{ secrets.BRIGHTSECURITY_PROJECT_ID }}"'","fileId":"'"${{ steps.upload-har.outputs.file_id }}"'",
          "hostsFilter":["brokencrystals.com"],"templateId":"t69wgyhwq1B66NkKbxoiqi","labels":[],
          "discoveryTypes":["archive"],"attackParamLocations":["path","query","fragment","body"],
          "info":{"source":"ui","client":{"name":"bright-ui","version":"v4.76.2"}}}') \
          scan_id=$(echo ${scan_response} | grep -oP '(?<="id":")[^"]*')
          echo "Started scan: $scan_id"
          echo "::set-output name=scan_id::$scan_id"
        id: start-scan
        
      - name: Wait for Breakpoint
        id: wait
        uses: NeuraLegion/wait-for@release
        with:
          api_token:  ${{ secrets.BRIGHT_TOKEN }}
          hostname: app.brightsec.com
          scan: ${{ steps.start-scan.outputs.scan_id }}
          wait_for: high
          code_scanning_alerts: true
          github_token: ${{ secrets.KEY_GITHUB }}
          timeout: 600
          stop_scan: true
